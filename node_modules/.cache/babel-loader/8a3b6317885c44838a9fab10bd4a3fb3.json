{"ast":null,"code":"import * as api from '../api';\nexport const getPost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: 'FETCH_POST',\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: 'FETCH_BY_SEARCH',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: 'LIKE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","getPost","id","dispatch","data","fetchPost","type","payload","post","error","console","log","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","updatePost","deletePost","likePost"],"sources":["/Users/meetdhabaliya/Desktop/MERN APP/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api'\n\nexport const getPost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.fetchPost(id);\n        dispatch({ type: 'FETCH_POST', payload: { post: data } })\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        const { data } = await api.fetchPosts(page);\n        dispatch({ type: 'FETCH_ALL', payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n        dispatch({ type: 'FETCH_BY_SEARCH', payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const { data } = await api.createPost(post);\n        dispatch({ type: 'CREATE', payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n        dispatch({ type: 'UPDATE', payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({ type: 'DELETE', payload: id })\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id);\n        dispatch({ type: 'LIKE', payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AAEA,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;EAC/C,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMJ,GAAG,CAACK,SAAJ,CAAcH,EAAd,CAAvB;IACAC,QAAQ,CAAC;MAAEG,IAAI,EAAE,YAAR;MAAsBC,OAAO,EAAE;QAAEC,IAAI,EAAEJ;MAAR;IAA/B,CAAD,CAAR;EACH,CAHD,CAGE,OAAOK,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AAQP,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;EAClD,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMJ,GAAG,CAACc,UAAJ,CAAeD,IAAf,CAAvB;IACAV,QAAQ,CAAC;MAAEG,IAAI,EAAE,WAAR;MAAqBC,OAAO,EAAEH;IAA9B,CAAD,CAAR;EACH,CAHD,CAGE,OAAOK,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AAQP,OAAO,MAAMM,gBAAgB,GAAIC,WAAD,IAAiB,MAAOb,QAAP,IAAoB;EACjE,IAAI;IACA,MAAM;MAAEC,IAAI,EAAE;QAAEA;MAAF;IAAR,IAAqB,MAAMJ,GAAG,CAACiB,kBAAJ,CAAuBD,WAAvB,CAAjC;IACAb,QAAQ,CAAC;MAAEG,IAAI,EAAE,iBAAR;MAA2BC,OAAO,EAAEH;IAApC,CAAD,CAAR;EACH,CAHD,CAGE,OAAOK,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AAQP,OAAO,MAAMS,UAAU,GAAIV,IAAD,IAAU,MAAOL,QAAP,IAAoB;EACpD,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMJ,GAAG,CAACkB,UAAJ,CAAeV,IAAf,CAAvB;IACAL,QAAQ,CAAC;MAAEG,IAAI,EAAE,QAAR;MAAkBC,OAAO,EAAEH;IAA3B,CAAD,CAAR;EACH,CAHD,CAGE,OAAOK,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AAQP,OAAO,MAAMU,UAAU,GAAG,CAACjB,EAAD,EAAKM,IAAL,KAAc,MAAOL,QAAP,IAAoB;EACxD,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMJ,GAAG,CAACmB,UAAJ,CAAejB,EAAf,EAAmBM,IAAnB,CAAvB;IACAL,QAAQ,CAAC;MAAEG,IAAI,EAAE,QAAR;MAAkBC,OAAO,EAAEH;IAA3B,CAAD,CAAR;EACH,CAHD,CAGE,OAAOK,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AAQP,OAAO,MAAMW,UAAU,GAAIlB,EAAD,IAAQ,MAAOC,QAAP,IAAoB;EAClD,IAAI;IACA,MAAMH,GAAG,CAACoB,UAAJ,CAAelB,EAAf,CAAN;IACAC,QAAQ,CAAC;MAAEG,IAAI,EAAE,QAAR;MAAkBC,OAAO,EAAEL;IAA3B,CAAD,CAAR;EACH,CAHD,CAGE,OAAOO,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AAQP,OAAO,MAAMY,QAAQ,GAAInB,EAAD,IAAQ,MAAOC,QAAP,IAAoB;EAChD,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMJ,GAAG,CAACqB,QAAJ,CAAanB,EAAb,CAAvB;IACAC,QAAQ,CAAC;MAAEG,IAAI,EAAE,MAAR;MAAgBC,OAAO,EAAEH;IAAzB,CAAD,CAAR;EACH,CAHD,CAGE,OAAOK,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM"},"metadata":{},"sourceType":"module"}